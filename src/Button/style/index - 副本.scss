$height: 28px !default;
$smallHeight: 22px !default;
$largeHeight: 32px !default;
$borderRadius: 3px !default;

//按钮默认样式风格
$defaultBorderColor: #B1B1B1;//#ccc  #B0B0B0
$defaultColor: #757575;
$defaultBGColor: #FFF;

$defaultHoverColor: #757575; //#E0E0E0 #FAFAFA 
$defaultHoverBGColor: #FAFAFA;
$defaultHoverBorderColor: #B1B1B1;

$defaultActiveColor: #757575;
$defaultActiveBGColor: #EFEFEF;  //#d4d4d4 #EFEFEF
$defaultActiveBorderColor: #B1B1B1;

//dashed按钮风格
$dashedColor: rgba(0,0,0,.7);

//按钮样式风格
$typeList: primary,danger;

$typeMap: (
	primaryColor: #FFF,
	primaryBGColor: #2d8cf0,
	primaryBorderColor: #2d8cf0,
	primaryHoverColor: #FFF,
	primaryHoverBGColor: mix(#FFF,#2d8cf0, 20%),
	primaryHoverBorderColor: mix(#FFF,#2d8cf0, 20%),
	primaryActiveColor: #FFF,
	primaryActiveBGColor: mix(#000,#2d8cf0, 10%),
	primaryActiveBorderColor: mix(#000,#2d8cf0, 10%),
	
	dangerColor: #FFF,
	dangerBGColor: #f04134,
	dangerBorderColor: #f04134,
	dangerHoverColor: #FFF,
	dangerHoverBGColor: #E8685E,
	dangerHoverBorderColor: #E8685E,
	dangerActiveColor: #FFF,
	dangerActiveBGColor: #d73435,
	dangerActiveBorderColor: #d73435,
);

//disabled样式
$disabledColor: rgba(0,0,0,.25);
$disabledBGColor:#f7f7f7;
$disabledBorderColor:#d9d9d9;
$disabledCursor:not-allowed;

.nil-btn {
    display: inline-block;
    cursor: pointer;
	box-sizing: border-box;
    white-space: nowrap;
    text-decoration: none;
    overflow: hidden;
    position: relative;
	margin-bottom:0;
	height:$height;
	padding: 0 10px;
	-ms-touch-action:manipulation;
	touch-action:manipulation;
	border:1px solid $defaultBorderColor;
	line-height:normal;
	font-weight:500;
	font-size:12px;
	background: $defaultBGColor;
	color: $defaultColor;
	position: relative;
	-webkit-user-select:none;
	-moz-user-select:none;
	-ms-user-select:none;
	user-select:none;
	vertical-align: middle;
	border-radius: $borderRadius;
	transition: all .3s;
}
//??
.nil-btn-radius {
	border-radius: $borderRadius;
}

.nil-btn-block {
	display:block;
	width:100%;	
}

.nil-btn-block+.nil-btn-block {
    margin-top: 5px;
}

.nil-btn-inline+.nil-btn-inline {
    margin-left: 5px;
}

.nil-btn,
.nil-btn:active,
.nil-btn:focus {
	outline:0
}

.nil-btn-sm {
	height:$smallHeight;
}

.nil-btn-lg {
	height:$largeHeight;
}

.nil-btn:focus,
.nil-btn:hover {
	color:$defaultHoverColor;
	background-color:$defaultHoverBGColor;
	border-color:$defaultHoverBorderColor;
}

.nil-btn:active,
.nil-btn-active{
	color:$defaultActiveColor;
	background-color:$defaultActiveBGColor;
	border-color:$defaultActiveBorderColor;
}

.nil-btn-disabled>*,
.nil-btn[disabled]>* {
	pointer-events:none
}

.nil-btn-dashed {
	border-style:dashed;
	color: $dashedColor;
}

@each $type in $typeList {
	.nil-btn-#{$type} {
		color:map-get($typeMap, "#{$type}Color");
		background-color:map-get($typeMap, "#{$type}BGColor");
		border-color:map-get($typeMap, "#{$type}BorderColor");
	}
	
	.nil-btn-#{$type}:focus,.nil-btn-#{$type}:hover {
		color:map-get($typeMap, "#{$type}HoverColor");
		background-color:map-get($typeMap, "#{$type}HoverBGColor");
		border-color:map-get($typeMap, "#{$type}HoverBorderColor");
	}
	
	.nil-btn-#{$type}.nil-btn-active,.nil-btn-#{$type}:active {
		color:map-get($typeMap, "#{$type}ActiveColor");
		background-color:map-get($typeMap, "#{$type}ActiveBGColor");
		border-color:map-get($typeMap, "#{$type}ActiveBorderColor");
	}
}
/*
.nil-btn-primary.nil-btn-disabled,
.nil-btn-danger.nil-btn-disabled,
.nil-btn-dashed.nil-btn-disabled,
*/
.nil-btn.nil-btn-disabled,
.nil-btn[disabled],
.nil-btn:disabled,
.nil-btn-disabled:active,
.nil-btn-disabled:hover,
.nil-btn[disabled]:active,
.nil-btn[disabled]:hover {
    color:$disabledColor;
	background-color:$disabledBGColor;
	border-color:$disabledBorderColor;
	cursor:$disabledCursor;
}

.nil-btn-icon-only {
	padding-left:8px;
	padding-right:8px
}

.nil-btn-icon {
    vertical-align: baseline;
    background-position: center center;
    background-repeat: no-repeat;
	display: inline-block;
    font-style: normal;
    text-align: center;
    text-transform: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.nil-btn>.nil-btn-icon+.nil-btn-text, .nil-btn>.nil-btn-text+.nil-btn-icon {
    margin-left: 3px;
}

.nil-btn-text {
    display: inline-block;
    vertical-align: top;
    overflow: hidden;
    text-overflow: ellipsis;
	max-width: 100%;
}

.nil-btn-group {
	position:relative;
	display:inline-block
}
.nil-btn-group>.nil-btn {
	position:relative;
	z-index:1
}
.nil-btn-group>.nil-btn.active,.nil-btn-group>.nil-btn:active,.nil-btn-group>.nil-btn:focus,.nil-btn-group>.nil-btn:hover {
	z-index:2
}
.nil-btn-group>.nil-btn:disabled {
	z-index:0
}

.nil-btn-group .nil-btn+.nil-btn {
	margin-left:-1px
}
.nil-btn-group .nil-btn:not(:first-child):not(:last-child) {
	border-radius:0;
}
.nil-btn-group>.nil-btn:first-child {
	margin-left:0
}
.nil-btn-group>.nil-btn:first-child:not(:last-child) {
	border-bottom-right-radius:0;
	border-top-right-radius:0;
}
.nil-btn-group>.nil-btn:last-child:not(:first-child) {
	border-bottom-left-radius:0;
	border-top-left-radius:0;
}
.nil-btn-group .nil-btn-primary:not(:first-child):not(:last-child) {
	border-right-color:map-get($typeMap, "primaryHoverBGColor");
	border-left-color:map-get($typeMap, "primaryActiveBGColor");
}
.nil-btn-group .nil-btn-primary:not(:first-child):not(:last-child):disabled {
	border-color:$disabledBorderColor
}
.nil-btn-group .nil-btn-primary:first-child:not(:last-child) {
	border-right-color:map-get($typeMap, "primaryActiveBGColor");
}
.nil-btn-group .nil-btn-primary:first-child:not(:last-child)[disabled] {
	border-right-color:$disabledBorderColor
}
.nil-btn-group .nil-btn-primary+.nil-btn-primary,.nil-btn-group .nil-btn-primary:last-child:not(:first-child) {
	border-left-color:map-get($typeMap, "primaryActiveBGColor");
}
.nil-btn-group .nil-btn-primary+.nil-btn-primary[disabled],.nil-btn-group .nil-btn-primary:last-child:not(:first-child)[disabled] {
	border-left-color:$disabledBorderColor
}